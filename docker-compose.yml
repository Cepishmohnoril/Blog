version: '3.3'

services:

#Web-server
  nginx:
    container_name: nginx
    image: nginx:latest
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./backend:/var/www
      - ./env/nginx/conf.d:/etc/nginx/conf.d
    links:
      - php
    networks:
      - app-network

#Applications
  php:
    container_name: php
    build: ./backend
    restart: unless-stopped
    tty: true
    expose:
      - "9000"
    links:
      - mysql
    volumes:
      - ./backend:/var/www/
    networks:
      - app-network

  react:
    container_name: react
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/var/www/
    environment:
      TZ: 'Europe/Kiev'
    command: npm start
    #command: npm start //in unexpected pizdec situation with frontend use this

#Database
  mysql:
    container_name: mysql
    restart: always
    image: mysql:8
    ports:
      - "3306:3306"
    tty: true
    volumes:
      #HOST:CONTAINER
      - ./env/mysql:/var/lib/mysql
    environment:
      TZ: 'Europe/Kiev'
      MYSQL_DATABASE: 'blog'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: '1234'
      MYSQL_ROOT_PASSWORD: '1234'
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge